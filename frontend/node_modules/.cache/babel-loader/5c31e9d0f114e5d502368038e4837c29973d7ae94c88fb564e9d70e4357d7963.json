{"ast":null,"code":"import React,{useEffect}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import Navbar from\"../../components/Navbar\";import Heading from\"../../components/Heading\";import SubHeading from\"../../components/SubHeading\";import BlogGrid from\"../../components/BlogGrid\";import CategoriesList from\"../../components/CategoryList\";import Footer from\"../../components/Footer\";import Loading from\"../../components/Loading\";import SuccessToast from\"../../components/SuccessToast\";import ErrorToast from\"../../components/ErrorToast\";import{fetchBlogs,resetSuccessAndError as resetBlogSuccessAndError}from\"../../features/blogSlice\";import{fetchCategories,resetSuccessAndError as resetCategoriesSuccessAndError}from\"../../features/categoriesSlice\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function Home(){const dispatch=useDispatch();const{blogs,isError:isBlogsError,isSuccess:isBlogsSuccess,isLoading:isLoadingBlogs,message:blogsMessage}=useSelector(state=>state.blogs);const{categories,isError:isCategoriesError,isSuccess:isCategoriesSuccess,isLoading:isLoadingCategories,message:categoriesMessage}=useSelector(state=>{return state.categories;});useEffect(()=>{const fetchData=async()=>{try{dispatch(fetchBlogs());dispatch(fetchCategories());}catch(err){console.error(err);}};fetchData();},[]);if(isLoadingBlogs||isLoadingCategories){return/*#__PURE__*/_jsx(Loading,{});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(Heading,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(SubHeading,{subHeading:\"Recent blog posts\"}),/*#__PURE__*/_jsx(BlogGrid,{blogPosts:blogs}),/*#__PURE__*/_jsx(CategoriesList,{categories:categories}),/*#__PURE__*/_jsx(Footer,{})]}),/*#__PURE__*/_jsx(SuccessToast,{show:isBlogsSuccess||isCategoriesSuccess,message:blogsMessage||categoriesMessage,onClose:()=>{dispatch(resetBlogSuccessAndError());dispatch(resetCategoriesSuccessAndError());}}),/*#__PURE__*/_jsx(ErrorToast,{show:isBlogsError||isCategoriesError,message:blogsMessage||categoriesMessage,onClose:()=>{dispatch(resetBlogSuccessAndError());dispatch(resetCategoriesSuccessAndError());}})]});}","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","Navbar","Heading","SubHeading","BlogGrid","CategoriesList","Footer","Loading","SuccessToast","ErrorToast","fetchBlogs","resetSuccessAndError","resetBlogSuccessAndError","fetchCategories","resetCategoriesSuccessAndError","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Home","dispatch","blogs","isError","isBlogsError","isSuccess","isBlogsSuccess","isLoading","isLoadingBlogs","message","blogsMessage","state","categories","isCategoriesError","isCategoriesSuccess","isLoadingCategories","categoriesMessage","fetchData","err","console","error","children","className","subHeading","blogPosts","show","onClose"],"sources":["/Users/cutlass/Downloads/IX/ix-blog-app/frontend/src/pages/Home/index.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Navbar from \"../../components/Navbar\";\nimport Heading from \"../../components/Heading\";\nimport SubHeading from \"../../components/SubHeading\";\nimport BlogGrid from \"../../components/BlogGrid\";\nimport CategoriesList from \"../../components/CategoryList\";\nimport Footer from \"../../components/Footer\";\nimport Loading from \"../../components/Loading\";\nimport SuccessToast from \"../../components/SuccessToast\";\nimport ErrorToast from \"../../components/ErrorToast\";\n\nimport {\n  fetchBlogs,\n  resetSuccessAndError as resetBlogSuccessAndError,\n} from \"../../features/blogSlice\";\nimport {\n  fetchCategories,\n  resetSuccessAndError as resetCategoriesSuccessAndError,\n} from \"../../features/categoriesSlice\";\n\nexport default function Home() {\n  const dispatch = useDispatch();\n\n  const {\n    blogs,\n    isError: isBlogsError,\n    isSuccess: isBlogsSuccess,\n    isLoading: isLoadingBlogs,\n    message: blogsMessage,\n  } = useSelector((state) => state.blogs);\n\n  const {\n    categories,\n    isError: isCategoriesError,\n    isSuccess: isCategoriesSuccess,\n    isLoading: isLoadingCategories,\n    message: categoriesMessage,\n  } = useSelector((state) => {\n    return state.categories;\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        dispatch(fetchBlogs());\n        dispatch(fetchCategories());\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    fetchData();\n  }, []);\n\n  if (isLoadingBlogs || isLoadingCategories) {\n    return <Loading />;\n  }\n\n  return (\n    <>\n      <Navbar />\n      <Heading />\n      <div className=\"container\">\n        <SubHeading subHeading={\"Recent blog posts\"} />\n        <BlogGrid blogPosts={blogs} />\n        <CategoriesList categories={categories} />\n        <Footer />\n      </div>\n      <SuccessToast\n        show={isBlogsSuccess || isCategoriesSuccess}\n        message={blogsMessage || categoriesMessage}\n        onClose={() => {\n          dispatch(resetBlogSuccessAndError());\n          dispatch(resetCategoriesSuccessAndError());\n        }}\n      />\n      <ErrorToast\n        show={isBlogsError || isCategoriesError}\n        message={blogsMessage || categoriesMessage}\n        onClose={() => {\n          dispatch(resetBlogSuccessAndError());\n          dispatch(resetCategoriesSuccessAndError());\n        }}\n      />\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
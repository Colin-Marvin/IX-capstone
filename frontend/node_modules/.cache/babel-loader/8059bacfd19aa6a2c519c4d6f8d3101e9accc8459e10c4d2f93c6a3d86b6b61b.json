{"ast":null,"code":"const register=async userData=>{const response=await fetch(\"http://localhost:8000/api/auth/register\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(userData)});if(!response.ok){try{let res=await response.json();throw res.message||JSON.stringify(res);}catch(err){console.log(err);const error=new Error(\"Something went wrong\");throw error.message;}}const responseData=await response.json();localStorage.setItem(\"user\",JSON.stringify(responseData.data));return responseData;};const login=async userData=>{const response=await fetch(\"http://localhost:8000/api/auth/login\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(userData)});if(!response.ok){try{let res=await response.json();throw res.message||JSON.stringify(res);}catch(err){console.log(err);const error=new Error(\"Something went wrong\");throw error.message;}}const responseData=await response.json();localStorage.setItem(\"user\",JSON.stringify(responseData.data));return responseData;};const getUser=async authorId=>{const response=await fetch(\"http://localhost:8000/api/auth/user/\".concat(authorId));if(!response.ok){let res=await response.json();throw res;}const responseData=await response.json();return responseData;};const updateUser=async(userId,userData)=>{const response=await fetch(\"http://localhost:8000/api/auth/user/\".concat(userId),{method:\"PUT\",headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \"+JSON.parse(localStorage.getItem(\"user\")).token},body:userData});if(!response.ok){let res=await response.json();throw res;}const responseData=await response.json();return responseData;};const authService={register,login,getUser,updateUser};export default authService;","map":{"version":3,"names":["register","userData","response","fetch","method","headers","body","JSON","stringify","ok","res","json","message","err","console","log","error","Error","responseData","localStorage","setItem","data","login","getUser","authorId","concat","updateUser","userId","Authorization","parse","getItem","token","authService"],"sources":["/Users/cutlass/Downloads/IX/ix-blog-app/frontend/src/services/authService.js"],"sourcesContent":["const register = async (userData) => {\n  const response = await fetch(\"http://localhost:8000/api/auth/register\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(userData),\n  });\n\n  if (!response.ok) {\n    try {\n      let res = await response.json();\n      throw res.message || JSON.stringify(res);\n    } catch (err) {\n      console.log(err);\n      const error = new Error(\"Something went wrong\");\n      throw error.message;\n    }\n  }\n\n  const responseData = await response.json();\n  localStorage.setItem(\"user\", JSON.stringify(responseData.data));\n  return responseData;\n};\n\nconst login = async (userData) => {\n  const response = await fetch(\"http://localhost:8000/api/auth/login\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(userData),\n  });\n\n  if (!response.ok) {\n    try {\n      let res = await response.json();\n      throw res.message || JSON.stringify(res);\n    } catch (err) {\n      console.log(err);\n      const error = new Error(\"Something went wrong\");\n      throw error.message;\n    }\n  }\n\n  const responseData = await response.json();\n  localStorage.setItem(\"user\", JSON.stringify(responseData.data));\n  return responseData;\n};\n\nconst getUser = async (authorId) => {\n  const response = await fetch(\n    `http://localhost:8000/api/auth/user/${authorId}`\n  );\n\n  if (!response.ok) {\n    let res = await response.json();\n    throw res;\n  }\n\n  const responseData = await response.json();\n  return responseData;\n};\n\nconst updateUser = async (userId, userData) => {\n  const response = await fetch(\n    `http://localhost:8000/api/auth/user/${userId}`,\n    {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization:\n          \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).token,\n      },\n      body: userData,\n    }\n  );\n\n  if (!response.ok) {\n    let res = await response.json();\n    throw res;\n  }\n\n  const responseData = await response.json();\n  return responseData;\n};\n\nconst authService = {\n  register,\n  login,\n  getUser,\n  updateUser,\n};\n\nexport default authService;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
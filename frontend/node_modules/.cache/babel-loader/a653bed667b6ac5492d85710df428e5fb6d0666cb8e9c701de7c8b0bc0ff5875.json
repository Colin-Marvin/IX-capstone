{"ast":null,"code":"const getBlogs = async () => {\n  try {\n    const res = await fetch(\"https://ix-blog-app-2d5c689132cd.herokuapp.com/api/blogs\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const blogAPIdata = await res.json();\n    return blogAPIdata.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/* getCategories from the same api endpoint */\nconst getCategories = async () => {\n  try {\n    const res = await fetch(\"https://ix-blog-app-2d5c689132cd.herokuapp.com/api/categories\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const categoryAPIdata = await res.json();\n    return categoryAPIdata.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\nconst getBlogsByCategory = async categoryId => {\n  try {\n    // Construct the URL with the category ID as a URL segment\n    const url = `https://ix-blog-app-2d5c689132cd.herokuapp.com/api/blogs/category/${categoryId}`;\n    const response = await fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (!response.ok) {\n      throw new Error(\"Network response was not ok\");\n    }\n    const blogAPIdata = await response.json();\n    return blogAPIdata.data;\n  } catch (err) {\n    console.error(\"Error fetching blogs by category:\", err);\n    console.error(\"Category ID:\", categoryId);\n    console.error(\"Error output:\", err);\n    throw err;\n  }\n};\nconst blogService = {\n  getBlogs,\n  getCategories,\n  getBlogsByCategory\n};\nexport default blogService;","map":{"version":3,"names":["getBlogs","res","fetch","method","headers","blogAPIdata","json","data","err","console","log","getCategories","categoryAPIdata","getBlogsByCategory","categoryId","url","response","ok","Error","error","blogService"],"sources":["/Users/cutlass/Downloads/IX/ix-blog-app/frontend/src/services/blogService.js"],"sourcesContent":["const getBlogs = async () => {\n  try {\n    const res = await fetch(\n      \"https://ix-blog-app-2d5c689132cd.herokuapp.com/api/blogs\",\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n    const blogAPIdata = await res.json();\n    return blogAPIdata.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/* getCategories from the same api endpoint */\nconst getCategories = async () => {\n  try {\n    const res = await fetch(\n      \"https://ix-blog-app-2d5c689132cd.herokuapp.com/api/categories\",\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n    const categoryAPIdata = await res.json();\n    return categoryAPIdata.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst getBlogsByCategory = async (categoryId) => {\n  try {\n    // Construct the URL with the category ID as a URL segment\n    const url = `https://ix-blog-app-2d5c689132cd.herokuapp.com/api/blogs/category/${categoryId}`;\n\n    const response = await fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(\"Network response was not ok\");\n    }\n\n    const blogAPIdata = await response.json();\n    return blogAPIdata.data;\n  } catch (err) {\n    console.error(\"Error fetching blogs by category:\", err);\n    console.error(\"Category ID:\", categoryId);\n    console.error(\"Error output:\", err);\n    throw err;\n  }\n};\n\nconst blogService = {\n  getBlogs,\n  getCategories,\n  getBlogsByCategory,\n};\n\nexport default blogService;\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAC3B,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CACrB,0DAA0D,EAC1D;MACEC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CACF,CAAC;IACD,MAAMC,WAAW,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;IACpC,OAAOD,WAAW,CAACE,IAAI;EACzB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EAClB;AACF,CAAC;;AAED;AACA,MAAMG,aAAa,GAAG,MAAAA,CAAA,KAAY;EAChC,IAAI;IACF,MAAMV,GAAG,GAAG,MAAMC,KAAK,CACrB,+DAA+D,EAC/D;MACEC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CACF,CAAC;IACD,MAAMQ,eAAe,GAAG,MAAMX,GAAG,CAACK,IAAI,CAAC,CAAC;IACxC,OAAOM,eAAe,CAACL,IAAI;EAC7B,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EAClB;AACF,CAAC;AAED,MAAMK,kBAAkB,GAAG,MAAOC,UAAU,IAAK;EAC/C,IAAI;IACF;IACA,MAAMC,GAAG,GAAI,qEAAoED,UAAW,EAAC;IAE7F,MAAME,QAAQ,GAAG,MAAMd,KAAK,CAACa,GAAG,EAAE;MAChCZ,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEF,IAAI,CAACY,QAAQ,CAACC,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IAEA,MAAMb,WAAW,GAAG,MAAMW,QAAQ,CAACV,IAAI,CAAC,CAAC;IACzC,OAAOD,WAAW,CAACE,IAAI;EACzB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACU,KAAK,CAAC,mCAAmC,EAAEX,GAAG,CAAC;IACvDC,OAAO,CAACU,KAAK,CAAC,cAAc,EAAEL,UAAU,CAAC;IACzCL,OAAO,CAACU,KAAK,CAAC,eAAe,EAAEX,GAAG,CAAC;IACnC,MAAMA,GAAG;EACX;AACF,CAAC;AAED,MAAMY,WAAW,GAAG;EAClBpB,QAAQ;EACRW,aAAa;EACbE;AACF,CAAC;AAED,eAAeO,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
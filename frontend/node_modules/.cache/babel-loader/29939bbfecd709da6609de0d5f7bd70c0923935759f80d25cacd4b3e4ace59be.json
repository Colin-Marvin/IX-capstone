{"ast":null,"code":"var _jsxFileName = \"/Users/cutlass/Downloads/IX/ix-blog-app/frontend/src/pages/Home/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Heading from \"../../components/Heading\";\nimport Navbar from \"../../components/Navbar\";\nimport BlogGrid from \"../../components/BlogGrid\";\nimport Footer from \"../../components/Footer\";\nimport SubHeading from \"../../components/SubHeading\";\nimport CategoryList from \"../../components/CategoryList\";\nimport blogService from \"../../services/blogService\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function HomePage() {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        const blogAPIdata = await blogService.getBlogs();\n        setBlogs(blogAPIdata);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchBlogs();\n  }, []);\n  const [categories, setCategories] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    const fetchCategories = async () => {\n      setLoading(true); // Set loading to true when the fetch begins\n      try {\n        const categoryAPIdata = await blogService.getCategories();\n        setCategories(categoryAPIdata);\n        setLoading(false); // Set loading to false upon successful fetch\n      } catch (err) {\n        console.error(err);\n        setError(\"Failed to fetch categories\"); // Set error message on failure\n        setLoading(false); // Ensure loading is set to false even if there's an error\n      }\n    };\n    fetchCategories();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SubHeading, {\n        subHeading: \"Recent Blog Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BlogGrid, {\n        blogPosts: blogs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SubHeading, {\n        subHeading: \"Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(CategoryList, {\n        categories: categories\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(HomePage, \"tgHjVk9NWMOr0Fc3WMvuxJFQn/c=\");\n_c = HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useEffect","useState","Heading","Navbar","BlogGrid","Footer","SubHeading","CategoryList","blogService","jsxDEV","_jsxDEV","Fragment","_Fragment","HomePage","_s","blogs","setBlogs","fetchBlogs","blogAPIdata","getBlogs","err","console","log","categories","setCategories","loading","setLoading","error","setError","fetchCategories","categoryAPIdata","getCategories","children","fileName","_jsxFileName","lineNumber","columnNumber","className","subHeading","blogPosts","_c","$RefreshReg$"],"sources":["/Users/cutlass/Downloads/IX/ix-blog-app/frontend/src/pages/Home/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport Heading from \"../../components/Heading\";\nimport Navbar from \"../../components/Navbar\";\nimport BlogGrid from \"../../components/BlogGrid\";\nimport Footer from \"../../components/Footer\";\nimport SubHeading from \"../../components/SubHeading\";\nimport CategoryList from \"../../components/CategoryList\";\n\nimport blogService from \"../../services/blogService\";\n\nexport default function HomePage() {\n  const [blogs, setBlogs] = useState([]);\n\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        const blogAPIdata = await blogService.getBlogs();\n        setBlogs(blogAPIdata);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchBlogs();\n  }, []);\n\n  const [categories, setCategories] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    const fetchCategories = async () => {\n      setLoading(true); // Set loading to true when the fetch begins\n      try {\n        const categoryAPIdata = await blogService.getCategories();\n        setCategories(categoryAPIdata);\n        setLoading(false); // Set loading to false upon successful fetch\n      } catch (err) {\n        console.error(err);\n        setError(\"Failed to fetch categories\"); // Set error message on failure\n        setLoading(false); // Ensure loading is set to false even if there's an error\n      }\n    };\n    fetchCategories();\n  }, []);\n\n  return (\n    <>\n      <Navbar />\n      <div className=\"container\">\n        <Heading />\n        <SubHeading subHeading={\"Recent Blog Posts\"} />\n        <BlogGrid blogPosts={blogs}></BlogGrid>\n        <SubHeading subHeading={\"Categories\"} />\n        {loading && <p>Loading...</p>}\n        {error && <p>{error}</p>}\n        <CategoryList categories={categories} />\n        <Footer />\n      </div>\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
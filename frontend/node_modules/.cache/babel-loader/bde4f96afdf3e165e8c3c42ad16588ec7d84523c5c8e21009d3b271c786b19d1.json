{"ast":null,"code":"var _jsxFileName = \"/Users/cutlass/Downloads/IX/ix-blog-app/frontend/src/pages/Blogs/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Navbar from \"../../components/Navbar\";\nimport Heading from \"../../components/Heading\";\nimport BlogList from \"../../components/BlogList\";\nimport Footer from \"../../components/Footer\";\nimport CategoriesList from \"../../components/CategoryList\";\nimport \"./index.css\";\nimport blogService from \"../../services/blogService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BlogsPage() {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n  const [categoryId, setCategoryId] = useState();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  // Fetch blogs based on category\n  useEffect(() => {\n    setLoading(true);\n    const fetchBlogs = async () => {\n      try {\n        // Adjust the URL or function according to your API structure\n        // This assumes your API can filter blogs by category ID\n        const result = await blogService.getBlogsByCategory(categoryId);\n        setBlogs(result);\n        setLoading(false);\n      } catch (err) {\n        console.error(\"Failed to fetch blogs:\", err);\n        setError(\"Failed to fetch blogs\");\n        setLoading(false);\n      }\n    };\n    fetchBlogs();\n  }, [categoryId]); // Re-run this effect when categoryId changes\n\n  // Handler to change category ID\n  const handleCategoryChange = id => {\n    setCategoryId(id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scroll-menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"page-subtitle\",\n          children: \"Blog Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }, this), !loading && !error && /*#__PURE__*/_jsxDEV(BlogList, {\n        blogPosts: blogs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(BlogsPage, \"/1G2FxYm85knb2Mr1Xw5HpMEzxE=\");\n_c = BlogsPage;\nvar _c;\n$RefreshReg$(_c, \"BlogsPage\");","map":{"version":3,"names":["React","useEffect","useState","Navbar","Heading","BlogList","Footer","CategoriesList","blogService","jsxDEV","_jsxDEV","BlogsPage","_s","blogs","setBlogs","categoryId","setCategoryId","loading","setLoading","error","setError","fetchBlogs","result","getBlogsByCategory","err","console","handleCategoryChange","id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","display","justifyContent","blogPosts","_c","$RefreshReg$"],"sources":["/Users/cutlass/Downloads/IX/ix-blog-app/frontend/src/pages/Blogs/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Navbar from \"../../components/Navbar\";\nimport Heading from \"../../components/Heading\";\nimport BlogList from \"../../components/BlogList\";\nimport Footer from \"../../components/Footer\";\nimport CategoriesList from \"../../components/CategoryList\";\n\nimport \"./index.css\";\n\nimport blogService from \"../../services/blogService\";\n\nexport default function BlogsPage() {\n  const [blogs, setBlogs] = useState([]);\n  const [categoryId, setCategoryId] = useState();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  // Fetch blogs based on category\n  useEffect(() => {\n    setLoading(true);\n    const fetchBlogs = async () => {\n      try {\n        // Adjust the URL or function according to your API structure\n        // This assumes your API can filter blogs by category ID\n        const result = await blogService.getBlogsByCategory(categoryId);\n        setBlogs(result);\n        setLoading(false);\n      } catch (err) {\n        console.error(\"Failed to fetch blogs:\", err);\n        setError(\"Failed to fetch blogs\");\n        setLoading(false);\n      }\n    };\n\n    fetchBlogs();\n  }, [categoryId]); // Re-run this effect when categoryId changes\n\n  // Handler to change category ID\n  const handleCategoryChange = (id) => {\n    setCategoryId(id);\n  };\n\n  return (\n    <div>\n      <Navbar />\n      <div className=\"container\">\n        <Heading />\n        <div className=\"scroll-menu\">\n          {/* Passing down the handler to change category */}\n        </div>\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <p className=\"page-subtitle\">Blog Posts</p>\n        </div>\n        {loading && <p>Loading...</p>}\n        {error && <p>Error: {error}</p>}\n        {!loading && !error && <BlogList blogPosts={blogs} />}\n      </div>\n      <Footer />\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}